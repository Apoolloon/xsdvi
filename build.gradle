plugins{
    id 'java-library'
    id 'idea'
    id "com.dorongold.task-tree" version "1.4"
}
repositories {
    jcenter()
    mavenLocal()
    flatDir{ dirs 'lib'}
}

dependencies {
    implementation name: 'xercesImpl'
//    implementation 'xerces:xercesImpl:2.9.0'
//    implementation 'org.apache.xerces:com.springsource.org.apache.xerces:2.9.0'
//    implementation 'apache-xerces:xercesImpl:2.9.0'
}

sourceSets {
    main {
        java { srcDirs = ['src'] }
        resources { srcDirs = ['res', 'lib'] }
    }
}

jar {
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Class-Path': configurations.runtimeClasspath.files.collect { it.getName() }.join(' '),
                'Main-Class': 'xsdvi.XsdVi'
        )
    }
}

version = '1.1.1'

task configure {
//    apply from: "${projectDir}/legacy-ant-tsks.gradle"
    apply from: "${projectDir}/legacy-ant-props.gradle"
//    dependsOn(showAntProps)
    println 'TRACER my configure task from main build.gradle'
}

task distribution {
    dependsOn(configure)
    dependsOn(build)
    doLast {
        println "We build with version=$version"
        println "get it at ${buildDir}\\${project.ext.buildLocation}"
    }
}

task manageResources() {
    description "Copies the resource jar's to the build directory."
    copy {
        from "lib"
        include "*.jar"
        into "${buildDir}\\${project.ext.buildLocation}"
    }
}
manageResources.mustRunAfter distribution

task release {
    dependsOn(distribution)
    doLast {
        println 'We release now'
    }
}

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(":release")) {
        println "take it baby"
    } else {
        version = version + '-SNAPSHOT'
    }
}

task genFaktura(type:Exec){
    dependsOn(distribution)
    group = 'gen'
    workingDir projectDir
    commandLine 'cmd', '/c', 'java -jar build\\libs\\xsdvi-1.1.1-SNAPSHOT.jar build\\resources\\main\\examples\\xsd\\faktura.xsd'
    standardOutput = new ByteArrayOutputStream()
    ext.output = {
        return standardOutput.toString()
    }
}

task tests{
    group = 'gen'
    dependsOn genFaktura
    doLast {
        println('TRACER tests runned')
    }
}